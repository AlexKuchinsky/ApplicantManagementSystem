@model ApplicationsManagementSystem.Models.UserPageModel
@using ApplicationsManagementSystem.Models;
@{
    ViewBag.Title = "UserMenu";
}
<h3>
    <b>
        Welcome! @(Model.User.Name+" "+Model.User.Surname+" "+Model.User.Patronumic)
    </b>
</h3>
@if (Model.UserApplications.Any())
{
    <b> Поданные вами заявления: </b>
    <br />
    int i = 1;
    foreach (Application app in Model.UserApplications)
    {
        if (app.Submitted == 1)
        {
            <b>@i. @Html.ActionLink("Заявление  (" + app.PaymentType.Description + ")", "Application", new { ApplicationID = app.ApplicationID }) </b>
        }
        else
        {
            <b>@i. @Html.ActionLink("Заявление  (" + app.PaymentType.Description + ") - продолжить редактирование", "SpecialitiesList", new { ApplicationID = app.ApplicationID,GroupID = app.ApplicationSettings.First().ApplicationGroupID }) </b>
        }
        <br />

    }
}
<br />
@if (Model.AvailableApplicationTypes.Count > 0)
{
    <b> Вы можете подать заявление на следующие формы обучения: </b>
    for (int i = 0; i < Model.AvailableApplicationTypes.Count; i++)
    {
        <br />

        <b>
            @(i + 1). @Html.ActionLink("Заявление (" + Model.AvailableApplicationTypes[i].Description + ")", "NewSpecialitiesList", new { PaymentTypeID = Model.AvailableApplicationTypes[i].PaymentTypeID, UserID = Model.User.UserID })
        </b>
    }
}
else
{
    <b>
        Вы подали все возможные типы заявлений
    </b>
}




<input type="text" size="8"
       oninput="onInput(event, this)">

<script>
    // Key: russian letter - Value: english letter
    var correlation_dictionary = { 'У': 'E', 'Е': 'T', 'Щ': 'O', 'З': 'P', 'Ф': 'A', 'Р': 'H', 'Л': 'K', 'Ч': 'X', 'С': 'C', 'И': 'B', 'Ь': 'M' }

    // Letters available to enter
    var available_letters = 'ETOPAHKXCBM'

    // Digits available to enter
    var available_digits = '0123456789'

    function onInput(event, input) {


        if (event.data == null)
            return;

        input.value = input.value.substring(0, input.value.length - 1);
        input_char = event.data.toUpperCase();
       

        if (input_char in correlation_dictionary) {
            input_char = correlation_dictionary[input_char];
        } 

        if ((input.value.length >= 2 && available_digits.indexOf(input_char) == -1) ||
            (input.value.length < 2 && available_letters.indexOf(input_char) == -1) ||
            input.value.length == 9) {
            return;
        }
        
        if (input.value.length < 2) {
            input.value += input_char;
        }
        else {
            input.value += input_char; 
        }
       
    }
</script>